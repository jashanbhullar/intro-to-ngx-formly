{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/basic-formly/basic-formly.component.html","webpack:///./src/app/basic-formly/basic-formly.component.ts","webpack:///./src/app/custom-template-formly/custom-template-formly.component.html","webpack:///./src/app/custom-template-formly/custom-template-formly.component.ts","webpack:///./src/app/custom-types.ts","webpack:///./src/app/custom-wrapper-formly/custom-wrapper-formly.component.html","webpack:///./src/app/custom-wrapper-formly/custom-wrapper-formly.component.ts","webpack:///./src/app/custom-wrapper.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container mt-2 d-flex flex-wrap\\\">\\n  <div class=\\\"card col-12 p-2 my-2 bg-secondary text-white\\\">\\n      <h1 class=\\\"text-center\\\"> ngx-formly</h1>\\n      <p class=\\\"text-center\\\">\\n        This is a demo code for demonstrating the basic functionality\\n        of ngx-formly\\n      </p>\\n  </div>\\n  <div class=\\\"card col-6 p-2 text-center my-2\\\">\\n    <div class=\\\"card-header mb-2\\\">Basic form</div>\\n      <app-basic-formly></app-basic-formly>\\n  </div>\\n  <div class=\\\"card col-6 p-2 text-center my-2\\\">\\n      <div class=\\\"card-header mb-2\\\">Custom template form</div>\\n      <app-custom-template-formly></app-custom-template-formly>\\n  </div>\\n  <div class=\\\"card col p-2 text-center my-2\\\">\\n    <div class=\\\"card-header mb-2\\\">Custom Wrapper (accordion) form</div>\\n    <app-custom-wrapper-formly></app-custom-wrapper-formly>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\nimport {\n  AccordionModule,\n  BsDatepickerModule,\n  TimepickerModule\n} from 'ngx-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { AppComponent } from './app.component';\nimport { BasicFormlyComponent } from './basic-formly/basic-formly.component';\nimport { CustomTemplateFormlyComponent } from './custom-template-formly/custom-template-formly.component';\nimport { FormlyWrapperAccordianComponent } from './custom-wrapper';\nimport {\n  FormlyFieldTextInputComponent,\n  FormlyFieldTextSelectComponent,\n  FormlyFieldTextDateComponent,\n  FormlyFieldTexTimeComponent\n} from './custom-types';\nimport { CustomWrapperFormlyComponent } from './custom-wrapper-formly/custom-wrapper-formly.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BasicFormlyComponent,\n    CustomTemplateFormlyComponent,\n    FormlyFieldTextInputComponent,\n    FormlyFieldTextSelectComponent,\n    FormlyFieldTextDateComponent,\n    FormlyFieldTexTimeComponent,\n    FormlyWrapperAccordianComponent,\n    CustomWrapperFormlyComponent\n  ],\n  imports: [\n    BrowserModule,\n    //  Needed for formly as it creates reactive forms\n    ReactiveFormsModule,\n\n    // Initizalie the formly module\n    // pass some custom configuration\n    // This config can also be done per child with\n    // FormlyModule.forChild()\n    FormlyModule.forRoot({\n      //  These work on the 'type' keyword\n      types: [\n        {\n          name: 'custom-text',\n          component: FormlyFieldTextInputComponent\n        },\n        {\n          name: 'custom-select',\n          component: FormlyFieldTextSelectComponent\n        },\n        {\n          name: 'custom-date',\n          component: FormlyFieldTextDateComponent\n        },\n        {\n          name: 'custom-time',\n          component: FormlyFieldTexTimeComponent\n        }\n      ],\n      wrappers: [\n        {\n          name: 'accordian',\n          component: FormlyWrapperAccordianComponent\n        }\n      ]\n    }),\n    FormlyBootstrapModule,\n\n    // Some ngx-bootstrap to implement using formly\n    AccordionModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    NgSelectModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n  <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\n    <div class=\\\"d-flex justify-content-around\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary submit-button\\\">Submit</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"options.resetModel()\\\">Reset</button>\\n    </div>\\n  </formly-form>\\n</form>\\n\"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-basic-formly',\n  templateUrl: './basic-formly.component.html'\n})\nexport class BasicFormlyComponent {\n\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {\n    formState: {\n      awesomeIsForced: false,\n    },\n  };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'text',\n      type: 'input',\n      templateOptions: {\n        label: 'Text',\n        placeholder: 'Formly is terrific!',\n        required: true,\n      },\n    },\n    {\n      key: 'nested.story',\n      type: 'textarea',\n      templateOptions: {\n        label: 'Some sweet story',\n        placeholder: 'It allows you to build and maintain your forms with the ease of JavaScript :-)',\n        description: '',\n        rows: 5\n      },\n      expressionProperties: {\n        'templateOptions.focus': 'formState.awesomeIsForced',\n        'templateOptions.description': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'And look! This field magically got focus!';\n          }\n        },\n      },\n    },\n    {\n      key: 'awesome',\n      type: 'checkbox',\n      templateOptions: { label: '' },\n      expressionProperties: {\n        'templateOptions.disabled': 'formState.awesomeIsForced',\n        'templateOptions.label': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'Too bad, formly is really awesome...';\n          } else {\n            return 'Is formly totally awesome? (uncheck this and see what happens)';\n          }\n        },\n      },\n    },\n    {\n      key: 'whyNot',\n      type: 'textarea',\n      expressionProperties: {\n        'templateOptions.placeholder': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'Too bad... It really is awesome! Wasn\\'t that cool?';\n          } else {\n            return 'Type in here... I dare you';\n          }\n        },\n        'templateOptions.disabled': 'formState.awesomeIsForced',\n      },\n      hideExpression: 'model.awesome',\n      templateOptions: {\n        label: 'Why Not?',\n        placeholder: 'Type in here... I dare you',\n      },\n    }\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n  <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary submit-button\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\n  </formly-form>\\n</form>\\n\"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-custom-template-formly',\n  templateUrl: './custom-template-formly.component.html'\n})\nexport class CustomTemplateFormlyComponent {\n\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {\n    formState: {\n      awesomeIsForced: false,\n    },\n  };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'text',\n      type: 'custom-text',\n      templateOptions: {\n        label: 'Custom text field',\n        placeholder: 'Custom text placeholder',\n        required: true,\n      },\n    },\n    {\n      key: 'select',\n      type: 'custom-select',\n      templateOptions: {\n        label: 'Custom Select field with ng-select',\n        placeholder: 'Custom select placeholder',\n        required: true,\n        multiple: false, // make true to select multilple options\n        options: [\n          { label: 'Value 1', value: 1},\n          { label: 'Value 2', value: 2}\n        ]\n      },\n    },\n    {\n      key: 'date',\n      type: 'custom-date',\n      templateOptions: {\n        label: 'Custom date field with ngx datepicker',\n        placeholder: 'Custom date placeholder',\n        required: true,\n      },\n    },\n    {\n      key: 'date',\n      type: 'custom-time',\n      templateOptions: {\n        label: 'Custom time picker field with ngx timepicker',\n        required: true\n      },\n    }\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n//  Custom text field with extra classes and all\n@Component({\n    selector: 'app-formly-field-custom-input',\n    template: `\n    <label>{{ to.label }}</label>\n    <input type=\"text\" class=\"form-control bg-secondary text-white\" [formControl]=\"formControl\" [placeholder]=\"to.placeholder\">\n  `,\n})\nexport class FormlyFieldTextInputComponent extends FieldType { }\n\n\n// You can edit all the fields of ng-select. Showing just one here.\n@Component({\n    selector: 'app-formly-field-custom-select',\n    template: `\n    <label>{{ to.label }}</label>\n      <ng-select\n      [placeholder]=\"to.placeholder\"\n      [items]=\"to.options\"\n      [multiple]=\"to.multiple\"\n      [formControl]=\"formControl\"\n      >\n      </ng-select>\n    `,\n})\nexport class FormlyFieldTextSelectComponent extends FieldType { }\n\n\n@Component({\n    selector: 'app-formly-field-custom-date',\n    template: `\n    <label>{{ to.label }}</label>\n    <input type=\"text\" [placeholder]=\"to.placeholder\" [formControl]=\"formControl\" class=\"form-control\" bsDatepicker>\n    `,\n})\nexport class FormlyFieldTextDateComponent extends FieldType { }\n\n\n@Component({\n    selector: 'app-formly-field-custom-timepicker',\n    template: `\n    <label>{{ to.label }}</label>\n    <timepicker [formControl]=\"formControl\"></timepicker>\n    `,\n})\nexport class FormlyFieldTexTimeComponent extends FieldType { }\n","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n    <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary submit-button\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\n    </formly-form>\\n  </form>\\n  \"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n    selector: 'app-custom-wrapper-formly',\n    templateUrl: './custom-wrapper-formly.component.html'\n})\nexport class CustomWrapperFormlyComponent {\n    form = new FormGroup({});\n    model: any = {};\n    options: FormlyFormOptions = {\n      formState: {\n        awesomeIsForced: false,\n      },\n    };\n    fields: FormlyFieldConfig[] = [\n      {\n        key: 'text',\n        type: 'custom-text',\n        wrappers: ['accordian'],\n        templateOptions: {\n          label: 'Custom text field',\n          placeholder: 'Custom text placeholder',\n          required: true,\n        },\n      },\n      {\n        key: 'select',\n        type: 'custom-select',\n        wrappers: ['accordian'],\n        templateOptions: {\n          label: 'Custom Select field with ng-select',\n          placeholder: 'Custom select placeholder',\n          required: true,\n          multiple: false, // make true to select multilple options\n          options: [\n            { label: 'Value 1', value: 1},\n            { label: 'Value 2', value: 2}\n          ]\n        },\n      },\n      {\n        key: 'date',\n        type: 'custom-date',\n        wrappers: ['accordian'],\n        templateOptions: {\n          label: 'Custom date field with ngx datepicker',\n          placeholder: 'Custom date placeholder',\n          required: true,\n        },\n      },\n      {\n        key: 'date',\n        type: 'custom-time',\n        wrappers: ['accordian'],\n        templateOptions: {\n          label: 'Custom time picker field with ngx timepicker',\n          required: true\n        },\n      }\n    ];\n    submit() {\n      if (this.form.valid) {\n        alert(JSON.stringify(this.model));\n      }\n    }\n}\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n    template: `\n    <accordion>\n        <accordion-group [heading]=\"to.label\">\n            <ng-template #fieldComponent></ng-template>\n        </accordion-group>\n    </accordion>\n  `,\n})\nexport class FormlyWrapperAccordianComponent extends FieldWrapper {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}